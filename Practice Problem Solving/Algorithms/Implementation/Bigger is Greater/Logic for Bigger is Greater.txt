Logic for problem @ https://www.hackerrank.com/challenges/bigger-is-greater/problem

Terminology used-
Lexiographic order- Dictionary order or alphabetical order(read more about it if you want to understand it).

Just what I did is-
case 1. this is the case for "no answer" -(if no answer or no next lexiographic order is found)
We know that "no answer" is only possible if all the letters of word are arranged in truely descending order i.e. like work zfed here z>f>e>d so therfore no next lexiographic order possible.
So I just just sorted the given string in descending order and checked if that sorted string is equal to the given string then this proves that the given string is in truely descending order hence "no answer" possible else do case 2.

case 2. Now this is the case executed when the above case 1 is not executed. 
		In this the next lexiographic order will be found and printed.
Now what is the logic to find the next lexiographic order-
Now lets take and given example "hefg" & its answer is given as hegf.
2.1 So what my mind set is; to find the minimum string order which after reshuffling we will get the next lexiographic order. 
2.2 So like I started a loop from i=size-2=2 to i>=0 and i-- each time. 
2.2.1 Inside it there is another loop j=size-1=3 to j>i and j--each time. 
2.2.1.1 Now inside this I checked if w[i]<w[j] then do something else continue. 
2.2.1.1 Therefore since f<g then what I did is I copied all the characters in new_string till i'th position not including i'th position(new_string=he). 
2.2.1.2 Then find the character from string="fg" having just greater value than char@ position i in given string  i.e. just greater than f which is obviously g(this depends on each case). 
2.2.1.3 So as we have new_string="he"; then just push this just greater character(g) in it(so new_string="heg". 
2.2.1.4 Then just sort the remaining string between i to j(which is "fg") excluding just greater char("g") from it(so string to be sorted-"f").
2.2.1.5 And then append the sorted string at last in new_string(so new_string="hegf"). 


So just this is next lexiographic order.

----------------------------------------------------------------------------------------------------------

Rough Idea-->>The idea is just to find the minimum string order from the given string from last. And then rearrenge that string. Like for string "abfdc" as d>c but we want a[i]<a[j] hence continue. In next iteration f>c then also continue. In next iteration b<c therefore from b to c copy in another string let say temp="bfdc" and then copy string from 0 to i i.e till char b in new string(new_string="a"). Now find char in temp which is just greter than given_String[i]i.e. char just greater than b. So it is c. Then push c in new_string="a" therefore it becomes new_string="ac". Therefore excluding c from temp; sort the whole string remaining(so after sorting we get "bdf"). Just append "df" at last in new_string="acbdf". We get the next lexiographic string of "abfdc" which is new_string="acbdf".

-----------------------------------------------------------------------------------------------------------

Thanks for your patience,
Follow me on Github @ https://github.com/ayushchaudhari
Follow me on Hacker Rank @Ayush_Chaudhari
Queries Related to Logic or code  @ https://www.linkedin.com/in/ayush-chaudhari/
Ayush Chaudhari